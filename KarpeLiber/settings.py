"""
Django settings for KarpeLiber project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import json
from pathlib import Path

from typing import IO

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).resolve().parent.parent

configFile: IO
try:
    configFile = open('/secrets/env.json')
except FileNotFoundError:
    configFile = open('.secrets/env.json')

CONFIG = json.load(configFile)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = CONFIG.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = CONFIG.get('ALLOWED_HOSTS', ['127.0.0.1', 'localhost'])

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'KarpeLiber.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'KarpeLiber.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': CONFIG.get('DB_ENGINE', 'django.db.backends.mysql'),
        'HOST': CONFIG.get('DB_HOST', 'db'),
        'PORT': CONFIG.get('DB_PORT', 3306),
        'NAME': CONFIG.get('DB_NAME', 'karpeliber'),
        'USER': CONFIG.get('DB_USER', 'karpeliber'),
        'PASSWORD': CONFIG.get('DB_PASSWORD', 'karpeliber'),
        'OPTIONS': {'charset': 'utf8mb4'},
    },
    # 'default': {
    #     'ENGINE': ENV.get('MYSQL_ENGINE', 'django.db.backends.mysql'),
    #     'NAME': ENV.get('MYSQL_DATABASE', 'student_dashboard'),
    #     'USER': ENV.get('MYSQL_USER', 'student_dashboard_user'),
    #     'PASSWORD': ENV.get('MYSQL_PASSWORD', 'student_dashboard_password'),
    #     'HOST': ENV.get('MYSQL_HOST', 'localhost'),
    #     'PORT': ENV.get('MYSQL_PORT', 3306),
    #     'OPTIONS': {'charset': 'utf8mb4'},
    # },
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
